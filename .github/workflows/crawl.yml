name: Get blocked domains from Greatfire Analyzer
on:
  schedule:
    - cron: "0 20 */16 * *"
  push:
    tags:
      - "v*"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: "^1.14"

      - name: Set $GOPATH and more variables
        run: |
          echo "::set-env name=RELEASE_NAME::Released on $(date +%Y%m%d%H%M)"
          echo "::set-env name=TAG_NAME::$(date +%Y%m%d%H%M)"
          echo "::set-env name=GOPATH::$(dirname $GITHUB_WORKSPACE)"
          echo "::add-path::$(dirname $GITHUB_WORKSPACE)/bin"
          go env -w GO111MODULE=auto
        shell: bash

      - name: Checkout the "master" branch
        uses: actions/checkout@v2.3.2
        with:
          ref: master

      - name: Go get project code & run
        run: |
          go get -u -v github.com/${{ github.repository }}
          cn-blocked-domain

      - name: Move file to publish directory
        run: |
          mkdir -p ./publish
          install -p domains.txt raw.txt ./publish/

      - name: Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git push assets to "release" branch
        run: |
          cd publish
          git init
          git config --local user.name "actions"
          git config --local user.email "action@github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release
